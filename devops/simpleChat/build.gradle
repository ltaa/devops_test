//group 'devops'
//version '1.0-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'jetty'
//apply plugin: 'docker'
apply plugin: 'application'

sourceCompatibility = 1.8
mainClassName = 'main.Main'


repositories {
    mavenCentral()
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'org.eclipse.jetty:jetty-server:9.4.0.M0'
    compile 'org.eclipse.jetty.websocket:websocket-server:9.4.0.M0'
    compile 'org.eclipse.jetty:jetty-webapp:9.4.0.M0'
    compile 'org.eclipse.jetty.websocket:websocket-servlet:9.4.0.M0'
}

shadowJar {
    baseName = "simpleChat"
    version = "0.0.1"
    classifier = null
    configurations = [project.configurations.compile]

//    doLast{ buildDocker.execute() }
}

//
//task buildDocker(type: Docker, dependsOn: shadowJar) {
//    push = false
//    String str = shadowJar.baseName
//    applicationName = str.toLowerCase()
//    dockerfile = file('src/main/docker/Dockerfile')
//    doFirst {
//        copy {
//            from shadowJar
//            into stageDir
//        }
//    }
//
//}

task buildDocker(type:Exec) {
    File dockerfile = file('src/main/docker/Dockerfile');

    File dockerBuildRoot = file(buildDir.toString() + File.separator + "docker");
    if (!dockerBuildRoot.exists() ) {
        dockerBuildRoot.mkdir();
    } else {
        if(!dockerBuildRoot.isDirectory())
            return;
    }

    copy {
        from shadowJar
        into dockerBuildRoot
    }

    copy {
        from dockerfile
        into dockerBuildRoot
    }

    String rdir = rootDir.toString();
    String rproj = rootProject.name.toString();
    String myRoot = rdir.substring(0, rdir.length() - rproj.length());

    String curProj = projectDir.toString().substring(myRoot.length());

    executable = "ansible-playbook"
    args += "-e"
    args += "docker_file_dir=/vagrant/" + curProj + "/build/docker/";
    args += "-i"
    args += myRoot + "ansible/inventory"
    args += myRoot + "ansible/buildDocker/buildDocker.yml"

//    executable = "touch"
//    args += "test"
}